@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_Compra";
        settings.CallbackRouteValues = new { Controller = "Compra", Action = "GridViewPartial_Compra", Fecha_ini = ViewBag.Fecha_ini, Fecha_fin = ViewBag.Fecha_fin, IdUsuario = ViewBag.IdUsuario, Estado = ViewBag.Estado };
        settings.KeyFieldName = "IdCompra";
        settings.Width = Unit.Percentage(100);

        //Configuración para que la grilla no muestre texto completo
        //settings.SettingsBehavior.AllowEllipsisInText = true;
        //settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        //CConfiguracion responsive

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        //Configuracion exportacion
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };

        //Evento para pintar de rojo las filas anuladas
        settings.HtmlRowPrepared = (s, e) =>
        {
            if (Convert.ToString(e.GetValue("Estado")) == "X")
            {
                e.Row.ForeColor = System.Drawing.Color.Red;
            }
        };
        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.SetDataItemTemplateContent(tc =>
            {
                if (Convert.ToString(DataBinder.Eval(tc.DataItem, "Estado")) != "X")
                {
                    ViewContext.Writer.Write(
                Html.ActionLink("Modificar", "Modificar", new { IdCompra = DataBinder.Eval(tc.DataItem, "IdCompra") }) + "&nbsp;" +
                        Html.ActionLink("Anular", "Anular", new { IdCompra = DataBinder.Eval(tc.DataItem, "IdCompra") },
                            new { onclick = "return confirm('¿Está seguro de que desea anular el registro?')" })
                    );
                }
            });
            c.SetHeaderTemplateContent(tc =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Nuevo", "Nuevo")
                );
            });
            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Pixel(150);
        });
        settings.Columns.Add("CodCompra", "Recibo").Width = Unit.Pixel(80);
        settings.Columns.Add("NomUsuario", "Recolector").Width = Unit.Pixel(200);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fecha";
            column.Caption = "Fecha";
            column.Width = Unit.Pixel(100);
            column.PropertiesEdit.DisplayFormatString = "d";
        });
        settings.Columns.Add("ProvNombre", "Proveedor").Width = Unit.Pixel(300);
        settings.Columns.Add("NomProducto", "Producto").Width = Unit.Pixel(200);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Comentario";
            column.Caption = "Comentario";
            column.Width = Unit.Pixel(300);
            column.EditFormSettings.Visible = DefaultBoolean.True;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Calificacion";
            column.Caption = "Calificacion";
            column.Width = Unit.Pixel(100);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Cantidad";
            column.Caption = "Cantidad";
            column.Width = Unit.Pixel(100);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Precio";
            column.Caption = "Precio";
            column.Width = Unit.Pixel(100);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Total";
            column.Caption = "Total";
            column.Width = Unit.Pixel(100);
        });

        settings.Columns.Add("EstadoCompra", "Estado").Width = Unit.Pixel(100);
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Cantidad").DisplayFormat = "{0:n2}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Total").DisplayFormat = "{0:n2}";
        settings.Settings.ShowFooter = true;
    });

}
@grid.Bind(Model).GetHtml()