@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_OrdenCompra";
        settings.CallbackRouteValues = new { Controller = "GenerarOrdenCompra", Action = "GridViewPartial_OrdenCompra", Fecha_ini = ViewBag.Fecha_ini, Fecha_fin = ViewBag.Fecha_fin, IdUsuario = ViewBag.IdUsuario };
        settings.KeyFieldName = "IdCompra";
        settings.Width = Unit.Percentage(100);

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        //CConfiguracion responsive

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuración checkbox
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

        settings.Columns.Add(column =>
        {
            column.Caption = "*";
            column.FieldName = "seleccionado";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(2);
            column.Visible = false;
        });

        //Evento para pintar de rojo las filas anuladas
        settings.Columns.Add("IdCompra", "ID").Width = Unit.Percentage(10);
        settings.Columns.Add("IdUsuario", "IdUsuario").Width = Unit.Percentage(10);
        settings.Columns.Add("ProvNombre", "Proveedor").Width = Unit.Percentage(10);
        settings.Columns.Add("NomProducto", "Producto").Width = Unit.Percentage(10);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fecha";
            column.Caption = "Fecha";
            column.Width = Unit.Percentage(8);
            column.PropertiesEdit.DisplayFormatString = "d";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Calificacion";
            column.Caption = "Calificacion";
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Cantidad";
            column.Caption = "Cantidad";
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Precio";
            column.Caption = "Precio";
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Total";
            column.Caption = "Total";
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Comentario";
            column.Caption = "Comentario";
            column.Width = Unit.Percentage(6);
            column.EditFormSettings.Visible = DefaultBoolean.True;
        });
        settings.Columns.Add("EstadoCompra", "Estado").Width = Unit.Percentage(10);

        settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        //settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.ClientSideEvents.BeginCallback = "function(s,e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); OnBeginCallback(s,e); }";
        settings.ClientSideEvents.Init = "function(s,e) { GridViewPartial_OrdenCompra.PerformCallback(); }";
    });
}
@grid.Bind(Model).GetHtml()